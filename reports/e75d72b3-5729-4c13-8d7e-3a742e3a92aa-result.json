{"name": "test_app_launch", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <tests.test_suites.test_mobile.TestMobile object at 0x055E9610>\n\n    def test_app_launch(self):\n        page = Calculator(self.driver)\n>       page.numeric_key.click()\n\ntests\\test_suites\\test_mobile.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npyautomation\\mobile\\mobile_element.py:34: in __get__\n    EC.presence_of_element_located((self._by, self._locator)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0739b74d-74e8-486f-8f7f-636b4a778e8c\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x0548C510>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\pyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "attachments": [{"name": "Screen-shot", "source": "09f5fa78-e92c-4602-b541-adf51670ca62-attachment.png", "type": "image/png"}, {"name": "log", "source": "8948972a-fff0-4c43-92bc-32b913d76d10-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "bbd662c0-56d6-4781-9405-0f0dc8fe45e9-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "6846e84d-76ee-41eb-b0d2-59e65ed26eb2-attachment.txt", "type": "text/plain"}], "start": 1557218182114, "stop": 1557218193229, "uuid": "274a33fb-b643-4fea-b21c-746a25d52fb9", "historyId": "298af4768ac56d600705fd272c590f59", "fullName": "tests.test_suites.test_mobile.TestMobile#test_app_launch", "labels": [{"name": "parentSuite", "value": "tests.test_suites"}, {"name": "suite", "value": "test_mobile"}, {"name": "subSuite", "value": "TestMobile"}, {"name": "host", "value": "XIPL0515"}, {"name": "thread", "value": "8892-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_suites.test_mobile"}]}